//
// Copyright (c) 2016-2022 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//



#include "../Common.ush"


Buffer<float4>		StrandsDeformedPositionBuffer;
Buffer<float4>		TangentBuffer;



struct FTressFXVisualizeTangentVSToGS
{
	uint VertexID : TEXCOORD0;
};

void MainVS(
	uint VertexID : SV_VertexID,
	out FTressFXVisualizeTangentVSToGS Output)
{
	Output.VertexID = VertexID;
}


struct FTressFXVisualizeTangentGSToPS
{
	float4 SvPosition : SV_POSITION;
	float4 Color : TEXCOORD0;
};

[maxvertexcount(6)]
void MainGS(point FTressFXVisualizeTangentVSToGS Input[1], inout LineStream<FTressFXVisualizeTangentGSToPS> OutStream)
{
	uint VertexID = Input[0].VertexID;

	FTressFXVisualizeTangentGSToPS Output;
	Output.Color = float4(1,0,0,0);

	float4 SvLineVertex[4];

	float4 VertexPos = StrandsDeformedPositionBuffer[VertexID];
	float3 Tangent = TangentBuffer[2*VertexID+1].xyz;
	
	SvLineVertex[0] = mul(float4(VertexPos.xyz,1),View.WorldToClip);
	SvLineVertex[1] = mul(float4(VertexPos.xyz + 5*Tangent,1),View.WorldToClip);


	//Line01
	Output.SvPosition = SvLineVertex[0];
	OutStream.Append(Output);
	Output.SvPosition = SvLineVertex[1];
	OutStream.Append(Output);
	OutStream.RestartStrip();

}

void MainPS(
	FTressFXVisualizeTangentGSToPS Input,
	out float4 OutColor : SV_Target0
	)
{
	//
	OutColor = Input.Color;
}
