//
// Copyright (c) 2016-2022 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

#include "TressFXDeepShadowCommonStruct.ush"

#include "../Common.ush"

#include "/Engine/Generated/Material.ush"
#include "/Engine/Generated/VertexFactory.ush"

#include "TressFXDeepShadowCommon.ush"

static const float FixPointMaxValue = 1000;	// 100m @hair_todo: make this camera relative, and expose a CVAR fix changing this value
static const float FixPointScale	= 100;	// 0.1mm precision
static const float FixPointRange	= 2 * FixPointMaxValue * FixPointScale;    

#define SUPPORT_OPACITY_MASK 0


void MainDepth(
	in float4 SvPosition : SV_Position)
{

}


void MainDom(
	in float4 SvPosition	: SV_Position,
	in float HairCoverage	: CUSTOM_COVERAGE,
	out float4 OutColor		: SV_Target0)
{

	const uint2 PixelCoord = uint2(floor(SvPosition.xy));
	const float FrontDepth = DeepRasterTFXPass.FrontDepthTexture.Load(uint3(PixelCoord, 0));
	const float DistanceToFrontDepth = GetDomDistanceToFrontDepthTFX(FrontDepth, SvPosition.z);

	OutColor = ComputeDOMWeightsTFX(DistanceToFrontDepth, DeepRasterTFXPass.LayerDepths) * HairCoverage;

}

