//
// Copyright (c) 2016-2022 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//


#include "../Common.ush"
#include "TressFXSimulationSDFCommon.ush"


RWStructuredBuffer<uint> SDFBufferRW;


#if defined(PERMUTATION_SDF_VISUALIZATION) && PERMUTATION_SDF_VISUALIZATION == 1

RWStructuredBuffer<uint> SDFDirectionCounterRW;
RWStructuredBuffer<uint> SDFDirectionStartOffsetBufferRW;


[numthreads(THREAD_GROUP_SIZE, 1, 1)]
void SDFGenInit(uint GIndex : SV_GroupIndex,
                    uint3 GId : SV_GroupID,
                    uint3 DTid : SV_DispatchThreadID)
{
    int SDFCellIndex = GId.x * THREAD_GROUP_SIZE + GIndex;
    if(SDFCellIndex >= TotalNumSDFCells) return;
	
    SDFBufferRW[SDFCellIndex] = FloatFlip3(INITIAL_DISTANCE);

//------------------------SDF Visualization------------------------------
	if(0 == SDFCellIndex)
		SDFDirectionCounterRW[0] = 0;

	SDFDirectionStartOffsetBufferRW[SDFCellIndex] = 0xFFFFFFFF;
//------------------------SDF Visualization------------------------------
}

#endif



#if defined(PERMUTATION_SDF_VISUALIZATION) && PERMUTATION_SDF_VISUALIZATION == 0

[numthreads(THREAD_GROUP_SIZE, 1, 1)]
void SDFGenInit(uint GIndex : SV_GroupIndex,
                    uint3 GId : SV_GroupID,
                    uint3 DTid : SV_DispatchThreadID)
{
    int SDFCellIndex = GId.x * THREAD_GROUP_SIZE + GIndex;
    if(SDFCellIndex >= TotalNumSDFCells) return;
	
    SDFBufferRW[SDFCellIndex] = FloatFlip3(INITIAL_DISTANCE);

}

#endif