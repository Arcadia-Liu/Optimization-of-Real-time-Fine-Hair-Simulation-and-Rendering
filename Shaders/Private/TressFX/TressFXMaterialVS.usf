//
// Copyright (c) 2016-2022 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//


float3 DecodeVelocityFromTexture(float4 In);
#include "TressFXVisibilityCommon.ush" 
#include "../Common.ush"
#include "/Engine/Generated/Material.ush"
#include "/Engine/Generated/VertexFactory.ush"

#if VERTEXSHADER
 
void Main(
	uint VertexId : SV_VertexID, 
	out float4 Position : SV_POSITION,
	nointerpolation out uint2 OutResolution : DISPATCH_RESOLUTION,
	nointerpolation out uint  OutTotalNodeCount : DISPATCH_NODE_COUNT)
{
	OutTotalNodeCount = MaterialPassTFXParameters.TotalNodeCounter.Load(uint3(0,0,0));
	OutResolution.x = ceil(sqrt(OutTotalNodeCount));
	OutResolution.y = OutResolution.x;

	const float2 ClipCoord = ((OutResolution +0.5f) / float2(MaterialPassTFXParameters.MaxResolution)) * 2;

	const float2 UV = float2(VertexId & 1, VertexId >> 1);
	const float2 Pos = float2(-UV.x, UV.y) * 4 + float2(-1,+1) + float2(ClipCoord.x, -ClipCoord.y);
	Position = float4(Pos, 0.5f, 1);
	
}

#endif // VERTEXSHADER
